{"version":3,"sources":["components/navigation/drawer/drawer.js","containers/basement/basement.js","containers/layout/layout.js","components/task_item/task_item.js","containers/task/task_list.js","pages/index_tasks/index_tasks.js","App.js","index.js"],"names":["drawerWidth","useStyles","makeStyles","theme","root","display","rootGrid","flexGrow","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","marginRight","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","MiniDrawer","classes","useTheme","useState","open","setOpen","className","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Grid","container","item","xs","sm","Typography","variant","noWrap","Drawer","paper","style","opacity","direction","Divider","List","map","text","index","ListItem","button","ListItemIcon","ListItemText","primary","cls","footCls","left","bottom","backgroundColor","palette","light","fontSize","labelCls","aHref","cursor","textDecoration","labelInfo","top","Footer","clsSt","paddingBottom","paddingLeft","paddingTop","md","href","target","Layout","props","minHeight","children","TaskItem","Task","paperStyle","containStyle","margin","marginTop","formControl","minWidth","grid","typeTask","id","name","TaskIndex","department","setDepartment","setRows","useEffect","filter","e","toString","Container","maxWidth","Paper","FormControl","InputLabel","Select","labelId","value","onChange","event","MenuItem","noValidate","autoComplete","TextField","label","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5201b36.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport ContactsIcon from '@material-ui/icons/Contacts';\nimport InputIcon from '@material-ui/icons/Input';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\n\nconst drawerWidth = 270;\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    rootGrid: {\n        flexGrow: 1,\n    },\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        marginLeft: drawerWidth,\n        width: `calc(100% - ${drawerWidth}px)`,\n        transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    menuButton: {\n        marginRight: 36,\n    },\n    hide: {\n        display: 'none',\n    },\n    drawer: {\n        width: drawerWidth,\n        flexShrink: 0,\n        whiteSpace: 'nowrap',\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n        width: theme.spacing(7) + 1,\n        [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9) + 1,\n        },\n    },\n    toolbar: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-end',\n        padding: theme.spacing(0, 1),\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\n\n\nexport default function MiniDrawer() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [open, setOpen] = useState(false);\n\n    const handleDrawerOpen = () => {\n        setOpen(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar\n                position=\"fixed\"\n                className={clsx(classes.appBar, {\n                    [classes.appBarShift]: open,\n                })}\n            >\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                        onClick={handleDrawerOpen}\n                        edge=\"start\"\n                        className={clsx(classes.menuButton, {\n                            [classes.hide]: open,\n                        })}\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} sm={8}>\n                            <Typography variant=\"h6\" noWrap>\n                                TechSupport\n                            </Typography>\n                        </Grid>\n                        {/*<Grid style={{fontSize: 18, color: 'Salmon'}} item xs={12} sm={2}>\n                            <span>\n                                techsup@support.com\n                            </span>\n                        </Grid>\n                        <Grid style={{fontSize: 18, color: 'Salmon'}} item xs={12} sm={2}>\n                            <span>\n                                8(8636)30-04-11\n                            </span>\n                    </Grid>*/}\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n            <Drawer\n                variant=\"permanent\"\n                className={clsx(classes.drawer, {\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                })}\n                classes={{\n                    paper: clsx({\n                    [classes.drawerOpen]: open,\n                    [classes.drawerClose]: !open,\n                    }),\n                }}\n            >\n                <div className={classes.toolbar}>\n                    <span style={{opacity: .6}}>Сайт поддержки</span>\n                    <IconButton onClick={handleDrawerClose}>\n                        {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                    </IconButton>\n                </div>\n                <Divider />\n                <List>\n                    {['Новая задача', 'Созданные задачи'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>\n                            {index === 0 ? <AddToPhotosIcon /> : <AssignmentIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                    ))}\n                </List>\n                <Divider />\n                <List>\n                    {['Контакты', 'Вход', 'Регистрация'].map((text, index) => (\n                    <ListItem button key={text}>\n                        <ListItemIcon>\n                            {index === 0 ? <ContactsIcon /> : index === 1 ? <InputIcon /> : <PersonAddIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={text} />\n                    </ListItem>\n                    ))}\n                </List>\n            </Drawer>\n        </div>\n    );\n}\n","import React from 'react';\nimport {makeStyles, Grid} from \"@material-ui/core\";\nimport LocalPhoneIcon from '@material-ui/icons/LocalPhone';\nimport InfoIcon from '@material-ui/icons/Info';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport AddToPhotosIcon from '@material-ui/icons/AddToPhotos';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport MailIcon from '@material-ui/icons/Mail';\nimport GroupIcon from '@material-ui/icons/Group';\n\nconst cls = makeStyles((theme) => ({\n    footCls: {\n        left: 0,\n        bottom: 0,\n        width: '100%',\n        color: 'white',\n        backgroundColor: theme.palette.primary.light,\n        fontSize: 14,\n    },\n    labelCls: {\n        fontSize: 14,\n    },\n    aHref: {\n        color: 'white',\n        cursor: 'pointer',\n        textDecoration: 'none',\n        \"&:hover\": {\n            opacity: .7,\n            textDecoration: 'none'\n        },\n    },\n    labelInfo: {\n        fontSize: 15,\n        position: 'relative',\n        top: 1\n    }\n}));\n\nexport default function Footer() {\n\n    const clsSt = cls();\n\n    return(\n        <div className={clsSt.footCls} style={{paddingBottom: 30}}>\n            <Grid container spacing={0} style={{paddingLeft: 15, paddingTop: 30}}>\n                <Grid item xs={12} md={2}>\n                    {/*<p>\n                        &ensp;2021 &copy; by TechSupport\n                    </p>*/}\n                </Grid>\n                <Grid style={{paddingLeft: 90}} item xs={12} md={3}>\n                    <p style={{fontSize: 18}}>\n                        Контакты\n                    </p>\n                    <p>\n                        <a href=\"#\" className={clsSt.aHref}>\n                            <LocalPhoneIcon style={{fontSize: 20}}/>&nbsp;\n                            <span className={clsSt.labelInfo}>8(8636)30-04-11</span>\n                        </a>\n                    </p>\n                    <p>\n                        <a href=\"#\" className={clsSt.aHref} target=\"_blank\">\n                            <MailIcon style={{fontSize: 20}}/>&nbsp;\n                            <span className={clsSt.labelInfo}>techsup@support.ru</span>\n                        </a>\n                    </p>\n                </Grid>\n                <Grid style={{paddingLeft: 90}} item xs={12} md={3}>\n                    <p style={{fontSize: 18}}>\n                        Задачи\n                    </p>\n                    <p>\n                        <a href=\"#\" className={clsSt.aHref}>\n                            <AddToPhotosIcon style={{fontSize: 20}}/>&nbsp;\n                            <span className={clsSt.labelInfo}>Создать задачу</span>\n                        </a>\n                    </p>\n                    <p>\n                        <a href=\"#\" className={clsSt.aHref}>\n                            <AssignmentIcon style={{fontSize: 20}}/>&nbsp;\n                            <span className={clsSt.labelInfo}>Активные задачи</span>\n                        </a>\n                    </p>\n                    <p>\n                        <a href=\"#\" className={clsSt.aHref}>\n                            <AssignmentTurnedInIcon style={{fontSize: 20}}/>&nbsp;\n                            <span className={clsSt.labelInfo}>Архив задач</span>\n                        </a>\n                    </p>\n                </Grid>\n                <Grid style={{paddingLeft: 90}} item xs={12} md={3}>\n                    <p style={{fontSize: 18}}>\n                        О нас\n                    </p>\n                    <p>\n                        <a href=\"#\" className={clsSt.aHref}>\n                            <InfoIcon style={{fontSize: 20}}/>&nbsp;\n                            <span className={clsSt.labelInfo}>Общие сведения</span>\n                        </a>\n                    </p>\n                    <p>\n                        <a href=\"#\" className={clsSt.aHref}>\n                            <ExploreIcon style={{fontSize: 20}}/>&nbsp;\n                            <span className={clsSt.labelInfo}>Как нас найти</span>\n                        </a>\n                    </p>\n                    <p>\n                        <a href=\"#\" className={clsSt.aHref}>\n                            <GroupIcon style={{fontSize: 20}}/>&nbsp;\n                            <span className={clsSt.labelInfo}>Наши партнёры</span>\n                        </a>\n                    </p>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}","import React, {Fragment} from \"react\";\nimport Drawer from '../../components/navigation/drawer/drawer.js';\nimport Basement from '../basement/basement.js';\n\nexport default function Layout(props) {\n    return (\n        <Fragment>\n            <Drawer />  \n            <div className=\"layout\" style={{backgroundColor: \"Lavender\", minHeight: '78vh'}}>\n                <div className=\"content\">\n                    {props.children}\n                </div>\n            </div>\n            <Basement />\n        </Fragment>\n    )\n}","import React from 'react';\n\nexport default function TaskItem() {\n    return (\n        <div>\n            <h3>\n\n            </h3>\n        </div>\n    )\n}","import React from 'react';\nimport TaskItem from '../../components/task_item/task_item.js';\n\nexport default function Task () {\n    return(\n        <div>\n            <TaskItem />\n        </div>\n    )\n}","import React, {useState, useEffect} from 'react';\nimport {Container, Paper, Grid} from \"@material-ui/core\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Layout from '../../containers/layout/layout.js';\nimport TaskList from '../../containers/task/task_list.js';\nimport TextField from '@material-ui/core/TextField';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n    paperStyle: {\n        padding: 15,\n        marginLeft: 60\n    },\n    containStyle: {\n        paddingTop: 80\n    },\n    root: {\n        '& > *': {\n            margin: theme.spacing(1),\n            width: '30ch',\n        },\n    },\n    button: {\n        display: 'block',\n        marginTop: theme.spacing(2),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 235,\n    },\n    grid: {\n        \n    }\n}))\n\nconst typeTask = [\n    {\n        id: 0,\n        name: 'Все задачи'\n    },\n    {\n        id: 1,\n        name: 'Активные'\n    },\n    {\n        id: 2,\n        name: 'Закрытые'\n    }\n]\n\nexport default function TaskIndex() {\n\n    const cls = useStyles();\n\n    const [department, setDepartment] = useState(0);\n    const [rows, setRows] =  useState([]);\n\n    const rowFiltered = () => {\n        if (department === 0){\n            return typeTask\n        }\n        return typeTask.filter(e => e.id.toString()[0] === department.toString()[0] )\n    }\n    const handleChange = (event) => {\n        setDepartment(event.target.value);\n    };\n\n    useEffect(()=>{\n        setRows(rowFiltered())\n    }, [department])\n\n    return(\n        <Layout>\n            <Container maxWidth={\"lg\"} className={cls.containStyle}>\n                <Paper className={cls.paperStyle}>\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md={9}>\n                            <FormControl className={cls.formControl}>\n                                <InputLabel id=\"demo-controlled-open-select-label\">Виды задач</InputLabel>\n                                <Select\n                                    labelId=\"demo-controlled-open-select-label\"\n                                    id=\"demo-controlled-open-select\"\n                                    value={department}\n                                    onChange={handleChange}\n                                >\n                                    {\n                                        typeTask.map(e => <MenuItem value={e.id} key={e.id}> {e.name}</MenuItem>)\n                                    }\n                                </Select>\n                            </FormControl>\n                        </Grid>\n                        <Grid item xs={12} md={3}>\n                            <form className={cls.root} noValidate autoComplete=\"off\">\n                                <TextField id=\"standard-basic\" label=\"Поиск по названию\" />\n                            </form>\n                        </Grid>\n                    </Grid>\n                    \n                    {/*<div style={{ width: '100%' }}>\n                        <Box display=\"flex\" p={1}>\n                            <Box p={1} flexGrow={1}>\n                                <FormControl className={cls.formControl}>\n                                    <InputLabel id=\"demo-controlled-open-select-label\">Виды задач</InputLabel>\n                                    <Select\n                                        labelId=\"demo-controlled-open-select-label\"\n                                        id=\"demo-controlled-open-select\"\n                                        value={department}\n                                        onChange={handleChange}\n                                    >\n                                        {\n                                            typeTask.map(e => <MenuItem value={e.id} key={e.id}> {e.name}</MenuItem>)\n                                        }\n                                    </Select>\n                                </FormControl>\n                            </Box>\n                            <Box p={1}>\n                                <form className={cls.root} noValidate autoComplete=\"off\">\n                                    <TextField id=\"standard-basic\" label=\"Поиск по названию\" />\n                                </form>\n                            </Box>\n                        </Box>\n                    </div>*/}\n                    <TaskList />\n                </Paper>\n            </Container>\n        </Layout>\n    )\n}","import React, {Component} from 'react';\nimport IndexTask from './pages/index_tasks/index_tasks.js';\n\nexport default function App() {\n  return (\n    <div>\n      <IndexTask />\n    </div>\n  )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}